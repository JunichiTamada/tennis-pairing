name: Deploy Pages (root + v1 + v2-preview)

on:
  push:
    branches: [ main, release/v2 ]
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # v2（このリポ）
      - name: Checkout v2 (current repo)
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps (v2)
        run: npm ci

      # 1) ルート（最新v2）
      - name: Build root (v2 stable)
        env:
          BASE_PATH: /tennis-pairing/
        run: |
          npm run build
          mkdir -p dist-all
          cp -r dist/* dist-all/

      # 2) v2-preview（当面は同一コードを再ビルド）
      - name: Build v2 preview (same code for now)
        env:
          BASE_PATH: /tennis-pairing/v2-preview/
        run: |
          npm run build
          mkdir -p dist-all/v2-preview
          cp -r dist/* dist-all/v2-preview/

      # 3) v1 を外部リポからチェックアウト（2段階フォールバック + 任意トークン）
      - name: Try checkout v1 (release/v1)
        id: co_v1_rel
        uses: actions/checkout@v4
        continue-on-error: true
        with:
          repository: JunichiTamada/tennis-pairing-v1   # ←正しい owner/repo を指定
          ref: release/v1
          path: repo-v1
      - name: Fallback checkout v1 (main)
        id: co_v1_main
        if: steps.co_v1_rel.outcome == 'failure'
        uses: actions/checkout@v4
        with:
          repository: JunichiTamada/tennis-pairing-v1
          ref: main
          path: repo-v1
      - name: Setup Node for v1
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: repo-v1/package-lock.json

      - name: Install deps (v1)
        working-directory: repo-v1
        run: npm ci

      - name: Build v1
        working-directory: repo-v1
        env:
          BASE_PATH: /tennis-pairing/v1/
        run: npm run build

      - name: Collect v1 artifacts
        run: |
          mkdir -p dist-all/v1
          cp -r repo-v1/dist/* dist-all/v1/

      # SPA 404 対応
      - name: Copy 404 fallbacks
        run: |
          cp dist-all/index.html dist-all/404.html
          cp dist-all/v1/index.html dist-all/v1/404.html || true
          cp dist-all/v2-preview/index.html dist-all/v2-preview/404.html || true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist-all

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
