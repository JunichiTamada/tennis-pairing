name: Deploy Pages (root + v1 + v2-preview)

on:
  push:
    branches: [ main, release/v1, v2 ]
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Configure Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Checkout main (for root & v2-preview)
        uses: actions/checkout@v4
        with:
          ref: main
          path: main

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            main/package-lock.json
            repo-v1/package-lock.json

      - name: Prepare dist-all
        run: |
          rm -rf dist-all
          mkdir -p dist-all

      # ---- root ----
      - name: Install deps (root)
        working-directory: main
        run: npm ci

      - name: Build root (/tennis-pairing/)
        working-directory: main
        run: |
          npm run build -- --base=/tennis-pairing/
          rsync -a --delete dist/ ../dist-all/

      # ---- v2-preview ----
      - name: Build v2-preview (/tennis-pairing/v2-preview/)
        working-directory: main
        run: |
          npm run build -- --base=/tennis-pairing/v2-preview/
          mkdir -p ../dist-all/v2-preview
          rsync -a --delete dist/ ../dist-all/v2-preview/

      # ---- v1 ----
      - name: Checkout v1 (from release/v1)
        uses: actions/checkout@v4
        with:
          ref: release/v1
          path: repo-v1

      - name: Install deps (v1)
        working-directory: repo-v1
        run: npm ci

      - name: Build v1 (/tennis-pairing/v1/)
        working-directory: repo-v1
        run: |
          npm run build -- --base=/tennis-pairing/v1/
          mkdir -p ../dist-all/v1
          rsync -a --delete dist/ ../dist-all/v1/

      # ---- SPA 404 fallback ----
      - name: Add SPA 404 fallbacks
        run: |
          [ -f dist-all/index.html ] && cp dist-all/index.html dist-all/404.html
          [ -f dist-all/v1/index.html ] && cp dist-all/v1/index.html dist-all/v1/404.html
          [ -f dist-all/v2-preview/index.html ] && cp dist-all/v2-preview/index.html dist-all/v2-preview/404.html

      # ---- Debug log ----
      - name: Show dist-all structure
        run: |
          echo "========== dist-all content =========="
          find dist-all -maxdepth 3 -type f | sort
          echo "======================================"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist-all

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
