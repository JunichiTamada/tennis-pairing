name: Deploy Pages (root + v1 + v2-preview)

on:
  push:
    branches: [ main, release/v1, v2 ]
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # === ルート(/) と /v2-preview は main のソースでビルド ===
      - name: "Checkout main (for root & v2-preview)"
        uses: actions/checkout@v4
        with:
          ref: main
          path: main

      - name: "Setup Node (global cache)"
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            main/package-lock.json
            repo-v1/package-lock.json

      # --- root (/tennis-pairing/) from main ---
      - name: "Install deps (root: main)"
        working-directory: main
        run: npm ci

      - name: "Build root (v2 stable on main)"
        working-directory: main
        run: |
          npm run build -- --base=/tennis-pairing/
          mkdir -p ../dist-all
          cp -r dist/* ../dist-all/

      # --- v2-preview (/tennis-pairing/v2-preview/) from main ---
      - name: "Build v2 preview (same code on main)"
        working-directory: main
        run: |
          npm run build -- --base=/tennis-pairing/v2-preview/
          mkdir -p ../dist-all/v2-preview
          cp -r dist/* ../dist-all/v2-preview/

      # --- v1 は release/v1 ブランチから取得してビルド（←ここが肝） ---
      - name: "Checkout v1 (from release/v1 branch)"
        uses: actions/checkout@v4
        with:
          ref: release/v1
          path: repo-v1

      - name: "Install deps (v1)"
        working-directory: repo-v1
        run: npm ci

      - name: "Build v1 (subpath base)"
        working-directory: repo-v1
        run: npm run build -- --base=/tennis-pairing/v1/

      - name: "Collect v1 artifacts"
        run: |
          mkdir -p dist-all/v1
          cp -r repo-v1/dist/* dist-all/v1/

      # SPA 404 fallbacks
      - name: "Copy 404 fallbacks"
        run: |
          cp dist-all/index.html dist-all/404.html || true
          cp dist-all/v1/index.html dist-all/v1/404.html || true
          cp dist-all/v2-preview/index.html dist-all/v2-preview/404.html || true

      - name: "Upload artifact"
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist-all

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: "Configure Pages"
        uses: actions/configure-pages@v5
      - id: deployment
        uses: actions/deploy-pages@v4
