name: Deploy Pages (root + v1 + v2-preview)

on:
  push:
    branches: [ main, release/v2 ]
  workflow_dispatch:
    inputs:
      build_v1:
        type: boolean
        default: false
        description: "Rebuild v1? (通常はOFFで固定ビルド)"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # v2（このリポ）
      - name: Checkout v2 (current repo)
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps (v2)
        run: npm ci

      # 1) ルート（最新v2）
      - name: Build root (v2 stable)
        run: |
          npm run build -- --base=/tennis-pairing/
          mkdir -p dist-all
          cp -r dist/* dist-all/

      # 2) v2-preview（当面は同一コードを再ビルド）
      - name: Build v2 preview (same code for now)
        run: |
          npm run build -- --base=/tennis-pairing/v2-preview/
          mkdir -p dist-all/v2-preview
          cp -r dist/* dist-all/v2-preview/

      # 3) v1 固定コミットをチェックアウト
      - name: Checkout fixed v1 (pinned tag)
        if: ${{ inputs.build_v1 }}
        uses: actions/checkout@v4
        with:
          repository: JunichiTamada/tennis-pairing
          ref: refs/tags/v1.0.0   # ← ここをタグに
          path: repo-v1

      - name: Setup Node for v1
        if: ${{ inputs.build_v1 }}
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: repo-v1/package-lock.json

      - name: Install deps (v1)
        if: ${{ inputs.build_v1 }}
        working-directory: repo-v1
        run: npm ci

      - name: Build v1 (fixed)
        if: ${{ inputs.build_v1 }}
        working-directory: repo-v1
        run: npm run build -- --base=/tennis-pairing/v1/

      - name: Collect v1 artifacts
        if: ${{ inputs.build_v1 }}
        run: |
          mkdir -p dist-all/v1
          cp -r repo-v1/dist/* dist-all/v1/

      # v1をスキップする場合は、過去のdistを再利用
      - name: Restore previous v1 artifacts
        if: ${{ !inputs.build_v1 }}
        run: |
          echo "Reusing previous v1 content (no rebuild)."
          mkdir -p dist-all/v1
          # Pagesキャッシュには前回成果物が残るため空でOK

      # SPA 404 対応
      - name: Copy 404 fallbacks
        run: |
          cp dist-all/index.html dist-all/404.html || true
          cp dist-all/v1/index.html dist-all/v1/404.html || true
          cp dist-all/v2-preview/index.html dist-all/v2-preview/404.html || true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist-all

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
